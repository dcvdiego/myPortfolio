/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    skirt: THREE.Mesh;
    body: THREE.Mesh;
    ballet_1: THREE.Mesh;
    ballet_1_1: THREE.Mesh;
  };
  materials: {
    ['Material.004']: THREE.MeshStandardMaterial;
    ['Material.005']: THREE.MeshStandardMaterial;
    ['Material.001']: THREE.MeshStandardMaterial;
    ['Material.003']: THREE.MeshStandardMaterial;
  };
};

export default function BalletMannequin({
  ...props
}: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    '/glb/balletMannequin.glb'
  ) as unknown as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.skirt.geometry}
        material={materials['Material.004']}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.0009520179}
      />
      <mesh
        geometry={nodes.body.geometry}
        material={materials['Material.005']}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.0009520179}
      />
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.0009520179}>
        <mesh
          geometry={nodes.ballet_1.geometry}
          material={materials['Material.001']}
        />
        <mesh
          geometry={nodes.ballet_1_1.geometry}
          material={materials['Material.003']}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/glb/balletMannequin.glb');
